<?php 

/**
 * Implementation of hook_nodeapi().
 *
 * We will implement several node API operations here. This hook allows us to
 * act on all major node operations, so we can manage our additional data
 * appropriately.
 */
function ss_nodeapi(&$node, $op, $teaser, $page) {
	switch ($op) {
		case 'presave':
			check_insert_term(&$node);
			break;
	}
}

/**
 * If node have term when user input. This function will add all term parent to node 
 * 
 * 
 */
function check_insert_term(&$node) {
	// no, do nothing
	if (empty($node->taxonomy)) return;
	
	$voca_list = array();
	
	// foreach taxonomy vacabulary
	foreach ($node->taxonomy as $vid => $term_ids) {
		$voca = taxonomy_vocabulary_load($vid); //load vocabulary
		
		// single, there's no parent
		if (!$voca -> multiple) continue;

		$list_parent = array(); //save list all term in vocabulary(*)
		foreach ($term_ids as $term_id) {
			// get all parent of term
			$parents = taxonomy_get_parents_all($term_id);
			if (empty($parents)) continue;

			foreach ($parents as $parent) {
				// if exist in list term(*) not add
				if (!in_array($parent->tid, $list_parent)) {
					$list_parent[] = $parent->tid;
				}
			}
		}
		$voca_list[$vid] = $list_parent;		
	}
	// merge two arry, only take items of  $voca_list
	foreach ($node->taxonomy as $vid => $term_ids){
		if(!is_array($node->taxonomy[$vid])) continue;
		$node->taxonomy[$vid] = $voca_list[$vid];
	}
}
